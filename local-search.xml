<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>docker配置DL环境</title>
    <link href="/2024/07/09/docker%E9%85%8D%E7%BD%AEDL%E7%8E%AF%E5%A2%83/"/>
    <url>/2024/07/09/docker%E9%85%8D%E7%BD%AEDL%E7%8E%AF%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<p>Docker只要拉取一个别人配置好环境的镜像，然后基于此镜像创建容器进行开发即可，并且方便移植，非常方便。</p><h2 id="镜像获取"><a href="#镜像获取" class="headerlink" title="镜像获取"></a>镜像获取</h2><p>比如我们想下载一个ubuntu镜像，直接在这里<a href="https://hub.docker.com/_/ubuntu">ubuntu - Official Image | Docker Hub</a>搜索ubuntu，然后复制<code>docker pull ubuntu</code>,并且加上对应版本，比如20.04，在具备Docker的终端中执行：<code>docker pull ubuntu:20.04</code>即可获得该镜像。</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240710070005335.png" alt="image-20240710070005335"></p><p><strong>但是我们想找一个配置好conda、pytorch、cuda和cudnn的镜像</strong>。</p><p>我们直接在docker hub上搜索Pytorch，会出现Pytorch官方提供的一系列镜像：</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240710070927689.png" alt="image-20240710070927689"></p><p>这里选择带devel的进行下载，<code>docker pull pytorch/pytorch:2.0.1-cuda11.7-cudnn8-devel</code>,我们选择2.0.1版本的pytorch。</p><p>下载完之后，<code>docker images</code>可以查看到刚才下载的镜像：</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240710083612946.png" alt="image-20240710083612946"></p><p>我们已经把镜像下载下来了，接下来是基于此镜像创建容器。</p><h2 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h2><p><code>docker images</code>:查看当前存在的镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">REPOSITORY                      TAG       IMAGE ID       CREATED         SIZE<br>ultralytics/yolov5              latest    23c76ebd5d7c   9 months ago    7.96GB<br>ubuntu20_torch-cuda11.7_mmd3d   v1.0      f196865743ea   9 months ago    13.5GB<br>pengzhile/pandora               latest    73e531d136bc   10 months ago   261MB<br>ubuntu                          20.04     53df61775e88   2 years ago     72.8MB<br></code></pre></td></tr></table></figure><p>创建一个容器，利用ubuntu镜像创建一个名为raindl的镜像，-t是给容器分配一个伪终端，-i是让容器标准输出在伪终端显示，方便操控容器。</p><p><code>docker run -it -v C:\Users\rain\Downloads\:/file -p 8897:22 --gpus all --shm-size 64g --name raindl ubuntu:20.04</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@65d59ead92dc:/# pwd<br>/<br>root@65d59ead92dc:/# cd /file/<br>root@65d59ead92dc:/file# ls<br>Music  Video  app  datasets  desktop.ini  documents  programs<br></code></pre></td></tr></table></figure><p>创建完容器后，可以在容器中使用GPU，<code>nvidia-smi</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@65d59ead92dc:/usr/local# nvidia-smi<br>Tue Jul  9 22:21:55 2024<br>+---------------------------------------------------------------------------------------+<br>| NVIDIA-SMI 535.104.07             Driver Version: 537.34       CUDA Version: 12.2     |<br>|-----------------------------------------+----------------------+----------------------+<br>| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |<br>| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |<br>|                                         |                      |               MIG M. |<br>|=========================================+======================+======================|<br>|   0  NVIDIA GeForce RTX 3090        On  | 00000000:01:00.0  On |                  N/A |<br>|  0%   31C    P8              29W / 350W |    806MiB / 24576MiB |      0%      Default |<br>|                                         |                      |                  N/A |<br>+-----------------------------------------+----------------------+----------------------+<br></code></pre></td></tr></table></figure><p><strong>新进入一个容器，需要执行<code>apt update</code>更新软件下载链接，方便后续安装软件。</strong></p><p>但是容器里面是没有CUDA Toolkit和cudnn的，也没有conda环境。</p><p><strong>我们可以自己创建，不过没必要，直接用别人创建好环境的镜像即可。</strong></p><p>比如前面拉取到的pytorch&#x2F;pytorch:2.0.1-cuda11.7-cudnn8-devel镜像：</p><p><code>docker run -itv C:\Users\rain\Downloads\:/file -p 8898:22 --gpus all --shm-size 64g --name raindl-cuda pytorch/pytorch:2.0.1-cuda11.7-cudnn8-devel</code></p><p>启动后自动进入&#x2F;workspace目录内，这是该镜像的设置。</p><p>我们查看该容器是否包含配置好的pytorch和cuda，cudnn完整的环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@1a8190a19173:/usr/local/cuda# nvcc -V<br>nvcc: NVIDIA (R) Cuda compiler driver<br>Copyright (c) 2005-2022 NVIDIA Corporation<br>Built on Wed_Jun__8_16:49:14_PDT_2022<br>Cuda compilation tools, release 11.7, V11.7.99<br>Build cuda_11.7.r11.7/compiler.31442593_0<br></code></pre></td></tr></table></figure><p>可以看到已经包含了完整的CUDA11.7</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@1a8190a19173:/usr/local/cuda# python<br>Python 3.10.11 (main, Apr 20 2023, 19:02:41) [GCC 11.2.0] on linux<br>Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.<br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; import torch</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; torch.cuda.is_available()</span><br>True<br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; torch.version.cuda</span><br>&#x27;11.7&#x27;<br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; torch.__version__</span><br>&#x27;2.0.1&#x27;<br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; torch.backends.cudnn.version()</span><br>8500<br></code></pre></td></tr></table></figure><p>我们的Pytorch也可以使用CUDA和CUDNN加速。</p><p><strong>不过机器上好像没有单独安装CUDNN</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">检查库文件</span><br>(base) root@1a8190a19173:~# ls /usr/local/cuda/lib64/libcudnn*<br>ls: cannot access &#x27;/usr/local/cuda/lib64/libcudnn*&#x27;: No such file or directory<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查版本文件</span><br>(base) root@1a8190a19173:~# cat /usr/local/cuda/include/cudnn_version.h | grep CUDNN_MAJOR -A 2<br>cat: /usr/local/cuda/include/cudnn_version.h: No such file or directory<br></code></pre></td></tr></table></figure><p><strong>用上面方法验证是没有安装的，但是官方验证方法是：</strong></p><blockquote><p>To verify that cuDNN is installed and is running properly, compile the mnistCUDNN sample located in the &#x2F;usr&#x2F;src&#x2F;cudnn_samples_v8 directory in the Debian file.</p><ol><li><p>Copy the cuDNN samples to a writable path.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$cp</span> -r <span class="hljs-regexp">/usr/</span>src<span class="hljs-regexp">/cudnn_samples_v8/</span> <span class="hljs-variable">$HOME</span><br></code></pre></td></tr></table></figure></li><li><p>Go to the writable path.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span>  <span class="hljs-variable">$HOME</span>/cudnn_samples_v8/mnistCUDNN</span><br></code></pre></td></tr></table></figure></li><li><p>Compile the mnistCUDNN sample.</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$make</span> clean &amp;&amp; make</span><br></code></pre></td></tr></table></figure></li><li><p>Run the mnistCUDNN sample.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">./mnistCUDNN</span><br></code></pre></td></tr></table></figure><p>If cuDNN is properly installed and running on your Linux system, you will see a message similar to the following:</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">Test </span>passed!<br></code></pre></td></tr></table></figure></li></ol></blockquote><p>跟随上面方法试一下，发现没有ministCUDNN文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">(base) root@1a8190a19173:/usr/src/cudnn_samples_v8# ls<br>NVIDIA_SLA_cuDNN_Support.txt<br></code></pre></td></tr></table></figure><p>我们github上下载一下：<a href="https://github.com/johnpzh/cudnn_samples_v8">johnpzh&#x2F;cudnn_samples_v8: cuDNN samples v8.x (github.com)</a></p><p>然后复制到容器的 <code>/</code>目录下面，执行<code>make clean &amp;&amp; make</code>（如果出现<code>fatal error: FreeImage.h: No such file or directory</code>，执行<code>apt update &amp;&amp; apt install libfreeimage3 libfreeimage-dev</code>安装即可，安装完之后，重新执行上述命令）</p><p>然后执行<code>./mnistCUDNN</code>,出现下面字符说明CUDNN是安装成功了的：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">...<br>Result of classification: 1 3 5<br>Test passed!<br></code></pre></td></tr></table></figure><p>同样，后续我测试了nvidia提供的<code>nvidia/cuda:11.7.1-cudnn8-devel-ubuntu20.04</code>镜像，虽然用<code>ls /usr/local/cuda/lib64/libcudnn*</code>或者<code>cat /usr/local/cuda/include/cudnn_version.h | grep CUDNN_MAJOR -A 2</code>没有检测到cudnn相关内容，但是其实是已经安装好cudnn的。</p><p>结论：如果用docker创建深度学习环境的话，建议直接下载pytorch提供的devel镜像，比如<code>pytorch/pytorch:2.0.1-cuda11.7-cudnn8-devel</code>,下载之前执行<code>nvidia-smi</code>查看你显卡驱动最高支持的CUDA版本号，你下载的镜像的cuda版本不能超过此版本号。该镜像中包含了完整的CUDA和CUDNN以及Pytorh和conda，省去了我们配置DL环境的很多麻烦。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/linjiqin/p/8608975.html">Docker容器的创建、启动、和停止 - Ruthless - 博客园 (cnblogs.com)</a></p><p><a href="https://blog.csdn.net/ljp1919/article/details/106209358">docker拉取的pytorch-gpu版找不到cuda和cudnn的位置，为何？_docker找不到torch-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_44961869/article/details/115954258">Linux下安装cuda和对应版本的cudnn_linux怎么在自己的环境中安装cuda和cudnn-CSDN博客</a></p><p><a href="https://jackfrisht.medium.com/install-nvidia-driver-via-ppa-in-ubuntu-18-04-fc9a8c4658b9">安裝 Nvidia driver Cuda Cudnn on Ubuntu 22.04 | Medium</a></p>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>环境配置</tag>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DL环境配置</title>
    <link href="/2024/07/05/DL%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/07/05/DL%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>conda是配置深度学习环境的利器，很方便隔离和配置每个深度学习算法的环境。下面基于windows、Linux、Docker三种方式依次讲解如何配置深度学习环境。</p><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="环境创建和管理"><a href="#环境创建和管理" class="headerlink" title="环境创建和管理"></a>环境创建和管理</h2><h3 id="安装miniconda"><a href="#安装miniconda" class="headerlink" title="安装miniconda"></a>安装miniconda</h3><p>下载miniconda：<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/">Index of &#x2F;anaconda&#x2F;miniconda&#x2F; | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p><p>选择<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py39_23.10.0-1-Linux-x86_64.sh%E8%A1%A8%E7%A4%BA%E9%BB%98%E8%AE%A4%E5%AE%89%E8%A3%85%E7%9A%84python%E7%89%88%E6%9C%AC%E4%B8%BA3.9%EF%BC%8C%E9%80%82%E5%90%88%E5%B9%B3%E5%8F%B0linux-x64">https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py39_23.10.0-1-Linux-x86_64.sh表示默认安装的python版本为3.9，适合平台linux-x64</a>.</p><p>执行命令<code>sh 刚才下载的minicodna版本名称</code>，然后弹出阅读条款，同意license terms处填写<code>yes</code>；接着弹出安装路径，自己选择安装在哪里；接着会问你是否同意自动初始化conda，即每次进入shell时会自动激活conda环境，我们同意此选项即可，后续也可以用<code>conda config --set auto_activate_base false</code>禁止自动激活。</p><p>安装完毕之后，自动创建的conda环境（base）的python版本为3.9，这和你下载的miniconda版本相关。</p><h3 id="conda镜像配置"><a href="#conda镜像配置" class="headerlink" title="conda镜像配置"></a>conda镜像配置</h3><p><code>conda config --show channels</code>可以查看当前codna从哪里下载的包，默认是defaults（国外的官方服务器）</p><p>添加镜像（你的机器方便访问的包下载服务器）</p><p><code>conda config --add channels xxx</code></p><p>比如添加清华大学镜像源：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/<br></code></pre></td></tr></table></figure><p>此时查看<code>~/.condarc</code>文件，可以看到channels下面有你添加的镜像源，后续可以修改此文件方便的添加或者删除镜像源。</p><h3 id="创建和删除环境"><a href="#创建和删除环境" class="headerlink" title="创建和删除环境"></a>创建和删除环境</h3><p><code>conda create -n 环境名 python=xxx</code></p><p><code>conda env remove -n 环境名</code></p><p>可以克隆环境从一个已经创建好的conda环境（同一台机器上）</p><p><code>conda create --name new_env --clone old_env</code></p><h3 id="pip源配置"><a href="#pip源配置" class="headerlink" title="pip源配置"></a>pip源配置</h3><p>OK环境创建好以后，后面就是下载项目所用的各种包了，可以用conda安装也可以用pip安装，conda源已经配好下面配置以下pip源：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建~/.pip/pip.conf文件</span><br>vim ~/.pip/pip.conf<br><span class="hljs-meta prompt_"># </span><span class="language-bash">写入以下内容</span><br>[global]<br>index-url = https://pypi.tuna.tsinghua.edu.cn/simple<br>[install]<br>trusted-host=mirrors.aliyun.com<br></code></pre></td></tr></table></figure><p>上面是永久配置pip源，如果是临时一次安装，可以用<code>-i 源</code>:</p><p><code>pip install xxx -i https://pypi.tuna.tsinghua.edu.cn/simple</code></p><h2 id="Pytorch安装"><a href="#Pytorch安装" class="headerlink" title="Pytorch安装"></a>Pytorch安装</h2><p>pytorch是深度学习的一个框架，很多项目是基于此的，因此这里讲一下如何安装这个包，它的版本与你Nvidia显卡驱动所支持的CUDA版本相关。</p><p>CUDA版本有三个：</p><p>1.GPU安装好驱动以后，会有一个对应的CUDA版本，用<code>nvidia-smi</code>可以查看，比如11.8，该版本表示你后续要安装的CUDA Toolkit Version(runtime version)版本不能超过11.8</p><p>2.CUDA Toolkit Version(runtime version)</p><blockquote><p>CUDA Toolkit Version（也称为运行时版本）是由 NVIDIA 提供的一组软件开发工具，用于创建使用 GPU（图形处理单元）进行并行计算的应用程序。它包含了开发、优化和调试 GPU 加速应用程序所需的库、编译器、驱动程序和工具。</p></blockquote><p>有些项目其实是不需要安装该工具的，比如yolov5，我们只要安装自带cuda的pytorch版本即可，比如：<code>conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia</code>或者<code>pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118</code>。</p><p><strong>需要注意的是安装pytorch的cuda版本不能超过你驱动所支持的最高CUDA版本。</strong></p><p>这些PyTorch 已经包含了所需的 CUDA 库，可以直接使用 GPU 加速。我们可以用以下代码检测torch是否可以用GPU：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br>torch.__version__  <span class="hljs-comment"># 1.13.1+cu116</span><br><span class="hljs-built_in">print</span>(torch.cuda.is_available())  <span class="hljs-comment"># True</span><br><span class="hljs-built_in">print</span>(torch.version.cuda)  <span class="hljs-comment"># 11.6</span><br><span class="hljs-built_in">print</span>(torch.backends.cudnn.version()) <span class="hljs-comment"># 8302</span><br></code></pre></td></tr></table></figure><p>上面结果可以看出我们的pytorch完全可以用GPU。</p><p>但是，<strong>有些应用是需要安装CUDA Toolkit的</strong>，比如mmdetection，它包含了一些自定义的 CUDA 操作，这些操作需要在安装时进行编译。安装 CUDA Toolkit 可以确保这些自定义操作能够正确编译和链接。因此建议我们还是安装CUDA Toolkit，以支持更多AI项目。</p><p>3.第三个CUDA版本其实就是前面提到的安装GPU版本的torch时相应的cuda，比如pytorch-cuda&#x3D;11.8，可以将其理解为非完整版的CUDA toolkit</p><p><strong>如果我们安装了CUDA Toolkit完整版的，然后再安装pytorch-cuda，此时pytorch-cuda版本号要和CUDAToolkit版本号一样吗？</strong></p><h2 id="CUDA-Toolkit安装"><a href="#CUDA-Toolkit安装" class="headerlink" title="CUDA Toolkit安装"></a>CUDA Toolkit安装</h2><p>参考官方文档进行安装：<a href="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html">CUDA Installation Guide for Linux (nvidia.com)</a></p><h2 id="CUDNN安装"><a href="#CUDNN安装" class="headerlink" title="CUDNN安装"></a>CUDNN安装</h2><p>下载：<a href="https://developer.nvidia.com/rdp/cudnn-archive">cuDNN Archive | NVIDIA Developer</a></p><p>选择要安装的版本，这里选择8.5.0，与CUDA11.x都是适配的</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240710100051501.png" alt="image-20240710100051501"></p><p>参考官方文档进行安装：<a href="https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-891/install-guide/index.html">Installation Guide :: NVIDIA cuDNN Documentation</a></p><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p>利用docker配置深度学习环境很方便，参考我的文章：docker配置DL环境（连接失效的话直接搜索）</p><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/qq_44961869/article/details/115954258">Linux下安装cuda和对应版本的cudnn_linux怎么在自己的环境中安装cuda和cudnn-CSDN博客</a></p>]]></content>
    
    
    <categories>
      
      <category>AI</category>
      
    </categories>
    
    
    <tags>
      
      <tag>conda</tag>
      
      <tag>pip</tag>
      
      <tag>环境配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fluid-4-随机更换背景图片</title>
    <link href="/2024/07/04/fluid-4-%E9%9A%8F%E6%9C%BA%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87/"/>
    <url>/2024/07/04/fluid-4-%E9%9A%8F%E6%9C%BA%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>和之前个性化页脚一样，采用代码注入的方式。</p><p>先定位到背景图片在哪个网页元素中（F12调试），最终定位到是在header的banner中，banner的css属性background中用到了背景图片：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;banner&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;banner&quot;</span> <span class="hljs-attr">data-title</span>=<span class="hljs-string">&quot;&lt;%= img_names %&gt;&quot;</span> &lt;%<span class="hljs-attr">-</span> <span class="hljs-attr">theme.banner</span> &amp;&amp; <span class="hljs-attr">theme.banner.parallax</span> &amp;&amp; &#x27;<span class="hljs-attr">parallax</span>=<span class="hljs-string">true</span>&#x27; %&gt;</span><br>     style=&quot;background: url(&#x27;&lt;%- url_for(banner_img) %&gt;&#x27;) no-repeat center center; background-size: cover;&quot;&gt;<br></code></pre></td></tr></table></figure><p>我们要对background的url值进行修改，只要让每次页面刷新时能够执行一段js代码修改该url值即可。可以采用代码注入的方式，将js代码注入到Fluid主题提供的banner中，而代码注入不能直接注入到banner这一节点，所以我们选择注入header.ejs文件整体替换header中的内容，在header.ejs中注入修改后的banner.ejs即可。具体操作如下：</p><p>主题根目录的scripts文件夹下（没有scripts的请新建）新建一个名为header.js的文件，内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123; <span class="hljs-attr">root</span>: siteRoot = <span class="hljs-string">&quot;/&quot;</span> &#125; = hexo.<span class="hljs-property">config</span>;<br><br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&quot;body_begin&quot;</span>, <span class="hljs-string">`&lt;div id=&quot;web_bg&quot;&gt;&lt;/div&gt;`</span>);<br><br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">filter</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;theme_inject&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">injects</span>) &#123;<br>    injects.<span class="hljs-property">header</span>.<span class="hljs-title function_">file</span>(<span class="hljs-string">&#x27;default&#x27;</span>, <span class="hljs-string">&#x27;source/_inject/layout/_partials/header.ejs&#x27;</span>, &#123; <span class="hljs-attr">img_names</span>: <span class="hljs-string">&#x27;value&#x27;</span> &#125;);<br>  &#125;<br>  );<br></code></pre></td></tr></table></figure><p>第三行代码直接将<code>&lt;div id=&quot;web_bg&quot;&gt;&lt;/div&gt;</code>注入到body标签开始位置，这个用于后续修改背景图片为全图，具体效果见<a href="https://rainblog.run/">AIrainday (rainblog.run)</a>。</p><p>将Fluid主题文件（到官网下载）中<code>layout\_partials\header.js</code>放在博客项目根目录下的<code>source/_inject/layout/_partials/header.ejs</code>。</p><p>并修改内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ejs">&lt;% let dir = process.cwd() %&gt;<br>&lt;%<br>var banner_img_height = parseFloat(page.banner_img_height || theme.index.banner_img_height)<br>%&gt;<br><br>&lt;div class=&quot;header-inner&quot; style=&quot;height: &lt;%= banner_img_height %&gt;vh;&quot;&gt;<br>  &lt;%- partial(&#x27;_partials/header/navigation&#x27;) %&gt;<br>  &lt;!-- &lt;%- partial(&#x27;_partials/header/banner&#x27;) %&gt; --&gt;<br>  &lt;%- include(dir + &#x27;/source/_inject/layout/_partials/header/banner.ejs&#x27;,&#123;img_names: &#x27;value&#x27;&#125;) %&gt;<br>&lt;/div&gt;<br></code></pre></td></tr></table></figure><p>我们将自定义的banner.ejs替换header中原始的banner.ejs，然后新建文件<code>source/_inject/layout/_partials/header/banner.ejs</code>，写上想修改的内容即可，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs ejs">&lt;%<br>var banner_img = page.banner_img || theme.index.banner_img<br>var banner_img_height = parseFloat(page.banner_img_height || theme.index.banner_img_height)<br>var banner_mask_alpha = parseFloat(page.banner_mask_alpha || theme.index.banner_mask_alpha)<br>var subtitle = page.subtitle || page.title<br>%&gt;<br><br>&lt;div id=&quot;banner&quot; class=&quot;banner&quot; data-title=&quot;&lt;%= img_names %&gt;&quot; &lt;%- theme.banner &amp;&amp; theme.banner.parallax &amp;&amp; &#x27;parallax=true&#x27; %&gt;<br>     style=&quot;background: url(&#x27;&lt;%- url_for(banner_img) %&gt;&#x27;) no-repeat center center; background-size: cover;&quot;&gt;<br>  &lt;div class=&quot;full-bg-img&quot;&gt;<br>    &lt;div class=&quot;mask flex-center&quot; style=&quot;background-color: rgba(0, 0, 0, &lt;%= parseFloat(banner_mask_alpha) %&gt;)&quot;&gt;<br>      &lt;div class=&quot;banner-text text-center fade-in-up&quot;&gt;<br>        &lt;div class=&quot;h2&quot;&gt;<br>          &lt;% if(theme.fun_features.typing.enable &amp;&amp; in_scope(theme.fun_features.typing.scope)) &#123; %&gt;<br>            &lt;span id=&quot;subtitle&quot; data-typed-text=&quot;&lt;%= subtitle %&gt;&quot;&gt;&lt;/span&gt;<br>          &lt;% &#125; else &#123; %&gt;<br>            &lt;span id=&quot;subtitle&quot;&gt;&lt;%- subtitle %&gt;&lt;/span&gt;<br>          &lt;% &#125; %&gt;<br>        &lt;/div&gt;<br><br>        &lt;% if (is_post()) &#123; %&gt;<br>          &lt;%- inject_point(&#x27;postMetaTop&#x27;) %&gt;<br>        &lt;% &#125; %&gt;<br>      &lt;/div&gt;<br><br>      &lt;% if (theme.scroll_down_arrow.enable &amp;&amp; theme.scroll_down_arrow.banner_height_limit &lt;= banner_img_height &amp;&amp; page.layout !== &#x27;404&#x27;) &#123; %&gt;<br>        &lt;div class=&quot;scroll-down-bar&quot;&gt;<br>          &lt;i class=&quot;iconfont icon-arrowdown&quot;&gt;&lt;/i&gt;<br>        &lt;/div&gt;<br>      &lt;% &#125; %&gt;<br>    &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/div&gt;<br><br>&lt;script&gt;<br>  function getRandomNumber(min, max) &#123;<br>  min = Math.ceil(min);<br>  max = Math.floor(max);<br>  return Math.floor(Math.random() * (max - min + 1)) + min;<br>&#125;<br><br>var randomNum = getRandomNumber(0, 3).toString();<br><br>var img_names = document.getElementById(&#x27;banner&#x27;).getAttribute(&#x27;data-title&#x27;);<br><br>var banner_img = &quot;/img/rain-random-bg/0&quot; + randomNum + &quot;.jpg&quot;;<br>document.getElementById(&#x27;banner&#x27;).removeAttribute(&#x27;style&#x27;)<br><br>document<br>  .querySelector(&#x27;#web_bg&#x27;)<br>  .setAttribute(&#x27;style&#x27;, `background: url(&#x27;$&#123;banner_img&#125;&#x27;); position: fixed; width: 100%;height: 100%; z-index: -1; background-size: cover;`);<br>  <br>document<br>  .querySelector(&quot;#banner .mask&quot;)<br>  .setAttribute(&#x27;style&#x27;, &#x27;background-color:rgba(0,0,0,0)&#x27;)<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>该文件是在主题文件<code>layout\_partials\header\banner.ejs</code>基础上修改的，主要添加了一段js代码来提供更换背景图片的功能。</p><p>最后只要将事先准备好的图像放在一个文件夹中，这里放在了<code>rain-random-bg</code>中，然后修改文件名统一为00.jpg,01.jpg…，比如你最多是010.jpg，修改第42行代码<code>var randomNum = getRandomNumber(0, 3).toString();</code>中的3为10即可。</p><p>最后将<code>rain-random-img</code>文件夹放在<code>source/img</code>内即可。依次执行<code>hexo clean、 hexo g、 hexo s</code>可以看到效果。</p><p>上面只引入了全图背景，关于其中css的样式修改会在下一篇文章中详解。</p><p><strong>不好的是每次添加图片到rain-random-bg文件夹中，都要手动修改文件名和最大索引，后续会改善一下。</strong></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://linguoguang.com/2023/05/10/Hexo_Fluid%E9%9A%8F%E6%9C%BA%E8%83%8C%E6%99%AF%E5%9B%BE%E5%AE%9E%E7%8E%B0/">Hexo_Fluid随机背景图实现 - 木木困玉光 (linguoguang.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>正则表达式</title>
    <link href="/2024/07/04/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <url>/2024/07/04/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<p>比如想要提取’mdsfmasdf Loss:200003.56 moretext’中的200003.56部分，我们应该怎么做呢。</p><p>正则表达式就是用一系列规则定义的匹配公式，利用该公式找到文本中匹配公式匹配到的内容。</p><p>上面例子的答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><br>text = <span class="hljs-string">&#x27;mdsfmasdf Loss:200003.56 moretext&#x27;</span><br><br><span class="hljs-comment"># 使用正则表达式查找 &#x27;Loss:&#x27; 后的数字（包括可能的小数点）</span><br><span class="hljs-keyword">match</span> = re.search(<span class="hljs-string">r&#x27;Loss:(\d+(\.\d+)?)&#x27;</span>, text)<br><br><span class="hljs-keyword">if</span> <span class="hljs-keyword">match</span>:<br>    full_match = <span class="hljs-keyword">match</span>.group(<span class="hljs-number">0</span>)  <span class="hljs-comment"># 整个匹配的字符串 &#x27;Loss:200003.56&#x27;</span><br>    loss_value = <span class="hljs-keyword">match</span>.group(<span class="hljs-number">1</span>)  <span class="hljs-comment"># 捕获组 1: &#x27;200003.56&#x27;</span><br>    decimal_part = <span class="hljs-keyword">match</span>.group(<span class="hljs-number">2</span>)  <span class="hljs-comment"># 捕获组 2: &#x27;.56&#x27; 或 None</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Full match: <span class="hljs-subst">&#123;full_match&#125;</span>&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Extracted loss value: <span class="hljs-subst">&#123;loss_value&#125;</span>&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Decimal part: <span class="hljs-subst">&#123;decimal_part&#125;</span>&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;No loss value found in the text.&quot;</span>)<br></code></pre></td></tr></table></figure><p>关注第6行代码：<code>match = re.search(r&#39;Loss:(\d+(\.\d+)?)&#39;, text)</code>，有两部分值得关注，第一个就是<code>re.search</code>方法，第二个是表达式<code>r&#39;Loss:(\d+(\.\d+)?)&#39;</code>。</p><h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><ol><li><code>re.search(pattern, string, flags=0)</code>：在字符串中查找正则表达式模式的第一次出现，并返回一个匹配对象。如果没有找到匹配项，则返回 <code>None</code></li><li><code>re.match(pattern, string, flags=0)</code>：尝试从字符串的起始位置匹配正则表达式模式。如果匹配成功，则返回匹配对象；否则，返回 <code>None</code>。和search区别是，match只判断字符串开头位置有没有指定表达式模式。</li><li><code>re.findall(pattern, string, flags=0)</code>：查找字符串中所有与正则表达式模式匹配的部分，并以列表形式返回。</li></ol><h2 id="表达式规则"><a href="#表达式规则" class="headerlink" title="表达式规则"></a>表达式规则</h2><p>比如<code>r&#39;Loss:(\d+(\.\d+)?)&#39;</code>，匹配Loss:一个或者多个数字后面可以有 <em>小数点后跟一个或者多个数字</em> ，也可以没有。里面的（）表示的是（）两层含义：</p><ul><li>括号里面内容是一个整体，后面跟量词<code>* + ?</code>时，将括号里的内容看作一个整体，比如<code>(\.\d+)?</code>可以表示<code>.12</code>或者什么也没有。</li><li>（）里面的内容如果匹配到，会被单独拿出来，后续可以用<code>match.group(1)</code>来获取第一个括号所匹配到内容。</li></ul><p>其实还有很多方法，以及规则，具体用到时候在问gpt吧，gpt讲解的还是比较容易理解的。</p>]]></content>
    
    
    <categories>
      
      <category>Kits</category>
      
    </categories>
    
    
    <tags>
      
      <tag>正则表达式</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fluid -3- 说说功能</title>
    <link href="/2024/06/30/fluid-3-%E8%AF%B4%E8%AF%B4%E5%8A%9F%E8%83%BD/"/>
    <url>/2024/06/30/fluid-3-%E8%AF%B4%E8%AF%B4%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h2 id="创建应用并使用artitalk"><a href="#创建应用并使用artitalk" class="headerlink" title="创建应用并使用artitalk"></a>创建应用并使用artitalk</h2><p>说说功能可以给博客开辟一个吐槽的地方，可以自己给自己留言，每天记录反省的内容等等。<br>参考文章：<a href="https://www.zywvvd.com/notes/hexo/theme/fluid/fluid-shuoshuo/fluid-shuoshuo/">明眸如初 (zywvvd.com)</a><br>利用leancloud和artitalk来启用此功能，下面主要是记录leancloud域名绑定时的疑惑，也就是文章的第10步：</p><ol><li>leancloud中点击绑定域名，域名填写比如shuoshuo.airainday.top(购买的域名前面加上自定的文字即可)</li><li>购买的域名服务商那里添加一个记录，我的是阿里云买的域名，记录填写内容如下，将leancloud提供的CNAME值填写到记录中的记录值即可<br><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/20240628214406.png" alt="image.png|600"></li></ol><p>等待DNS解析成功，不过出现发送证书失败，还是和之前问题一样：<strong>国际版其实不绑定域名也能用，但是只能在国外网络环境中访问，国内无法访问，必须绑定一个备案后的域名才行，由于这里绑定的域名没有备案，因此会出现申请证书失败的错误。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/20240629130333.png" alt="image.png|600"></p><p><strong>不绑定域名时</strong></p><p>我们按照这里创建好应用，不绑定域名，然后在博客目录的source文件夹中建一个shuoshuo文件夹，里面新建index.html文件（和创建about页面一样）。接着填入下面内容即可。不用绑定域名（国际版不用填写serverURL）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html">---<br>title: 雨天语录<br>date: 2024-01-14 18:19:19<br>type: &quot;shuoshuo&quot;<br>layout: &quot;shuoshuo&quot;<br>comments: true<br><br>---<br><br><span class="hljs-comment">&lt;!-- 引用 artitalk --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://unpkg.com/artitalk&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 存放说说的容器 --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;artitalk_main&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Artitalk</span>(&#123;</span><br><span class="language-javascript">    <span class="hljs-comment">// serverURL: &#x27;https://shuoshuo.zywvvd.com&#x27;,</span></span><br><span class="language-javascript">    <span class="hljs-attr">appId</span>: <span class="hljs-string">&#x27;**&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">appKey</span>: <span class="hljs-string">&#x27;**&#x27;</span></span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>绑定域名（国内已备案的域名才行）</strong></p><p>绑定域名rainblog.run，然后和上面一样域名服务商添加CNAME解析地址。</p><p>复制服务器地址，如下所示：</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630210425856.png" alt="image-20240630210425856"></p><p>然后和上面一样，博客根目录下新建一个shuoshuo文件夹，新建一个index.html文件，写入以下内容。和不绑定国内备案域名的区别就是多填了一个serverURL。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html">---<br>title: 雨天语录<br>date: 2024-01-14 18:19:19<br>type: &quot;shuoshuo&quot;<br>layout: &quot;shuoshuo&quot;<br>comments: true<br><br>---<br><br><span class="hljs-comment">&lt;!-- 引用 artitalk --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://unpkg.com/artitalk&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 存放说说的容器 --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;artitalk_main&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Artitalk</span>(&#123;</span><br><span class="language-javascript">    <span class="hljs-attr">serverURL</span>: <span class="hljs-string">&#x27;https://shuoshuo.rainblog.run&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">appId</span>: <span class="hljs-string">&#x27;**&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">appKey</span>: <span class="hljs-string">&#x27;**&#x27;</span></span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="创建shuoshuo入口"><a href="#创建shuoshuo入口" class="headerlink" title="创建shuoshuo入口"></a>创建shuoshuo入口</h2><p>我们前面已经创建好了shuoshuo的页面，只要在导航栏中添加一个链接作为shuoshuo页面入口即可。</p><p>在主题配置文件中，找到menu，写入以下内容（语录对应的就是shuoshuo页面的入口）。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">menu:</span><br>  <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;home&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-home-fill&quot;</span> &#125;<br>  <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;文章&quot;</span>, <br>      <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/&quot;</span>, <br>      <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-books&quot;</span>,<br>      <span class="hljs-attr">submenu:</span> [<br>      &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;archive&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/archives/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-archive-fill&quot;</span> &#125;,<br>      &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;category&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/categories/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-category-fill&quot;</span> &#125;,<br>      &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;tag&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/tags/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-tags-fill&quot;</span> &#125;<br>    ]<br>    &#125;<br>  <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;语录&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/shuoshuo&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-note&quot;</span> &#125;<br>  <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;about&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/about/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-user-fill&quot;</span> &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fluid -2- 评论系统</title>
    <link href="/2024/06/30/fluid-2-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    <url>/2024/06/30/fluid-2-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<p>本来用的评论系统是 <a href="https://utteranc.es/">utteranc.es</a>，但是功能有点少，因此换成Waline。</p><blockquote><p>Waline 是一款基于 Valine 衍生的简洁、安全的评论系统。</p><ul><li>官网链接：<a href="https://www.zywvvd.com/pages/go.html?goUrl=https://waline.js.org/">https://waline.js.org/</a></li><li>相对于 Valine 有一些后天的优势：</li></ul><table><thead><tr><th>优势</th><th>描述</th></tr></thead><tbody><tr><td>自由评论</td><td>完全的 Markdown 支持，同时包含表情、数学公式、HTML 嵌入</td></tr><tr><td>轻量</td><td>54kB gzip 的完整客户端大小</td></tr><tr><td>强大的安全性</td><td>内容校验、防灌水、保护敏感数据等</td></tr><tr><td>登录支持</td><td>在允许匿名评论的基础上，支持账号注册，保持身份</td></tr><tr><td>完全免费部署</td><td>可免费部署在 Vercel 上</td></tr><tr><td>易于部署</td><td>多种部署部署方式和存储服务支持</td></tr></tbody></table></blockquote><p>下面是具体的应用步骤。</p><h2 id="LeanCloud创建应用"><a href="#LeanCloud创建应用" class="headerlink" title="LeanCloud创建应用"></a>LeanCloud创建应用</h2><p>建议用国际版，不用绑定域名。创建应用选择免费的开发版本即可。</p><p>进入应用，选择左下角的 <code>设置</code> &gt; <code>应用 Key</code>。你可以看到你的 <code>APP ID</code>,<code>APP Key</code> 和 <code>Master Key</code>，后续会用到这三个值。</p><h2 id="Vercel部署"><a href="#Vercel部署" class="headerlink" title="Vercel部署"></a>Vercel部署</h2><p>vercel链接：<a href="https://vercel.com/new/airaindays-projects/clone?repository-url=https://github.com/walinejs/waline/tree/main/example">New Project – Vercel</a></p><p>点击上方链接，跳转至 Vercel 进行 Server 端部署。</p><p>如果你未登录的话，Vercel 会让你注册或登录，请使用 GitHub 账户进行快捷登录。</p><p>输入一个你喜欢的 Vercel 项目名称并点击 <code>Create</code> 继续:</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630084101726.png" alt="image-20240630084101726"></p><p>等待一会，出现满屏散花就说明部署成功了。点击Dashboard进入控制面板。</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630084212037.png" alt="image-20240630084212037"></p><p>点击顶部的<code>Settings-&gt;Environment Variables</code>进入环境变量配置页，并配置三个环境变量<code>LEAN_ID</code>，<code>LEAN_KEY</code>和 <code>LEAN_MASTER_KEY</code>，它们的值分别对应上一步在LeanCloud中获得的<code>APP ID</code>，<code>APP KEY</code>，<code>Master Key</code>，记得点击右下角<code>Save</code></p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630084912832.png" alt="image-20240630084912832"></p><p>环境变量配置完成后，点击顶部<code>Deployments</code>，进行<code>Redeploy</code>，使配置生效</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630085027551.png" alt="image-20240630085027551"></p><p>重新部署完成后，点击<code>Visit</code>即可访问Waline服务端地址</p><p>在该页面点击<code>Login</code>，弹框页面则为服务端的登录地址，可在此注册和登录</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630085609684.png" alt="image-20240630085609684"></p><p>亦可以通过<code>评论系统地址/ui</code>或是登录过后点击自己的头像进入应用的管理页面。</p><p>依次点击<code>Settings</code>,<code>Domains</code>，复制服务地址，后面需要用到</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630092117472.png" alt="image-20240630092117472"></p><h2 id="Hexo-Fluid主题中使用Waline评论系统"><a href="#Hexo-Fluid主题中使用Waline评论系统" class="headerlink" title="Hexo Fluid主题中使用Waline评论系统"></a>Hexo Fluid主题中使用Waline评论系统</h2><p>修改主题配置文件：</p><p>1.修改<code>comments</code>配置项</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">comments:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">waline</span><br></code></pre></td></tr></table></figure><p>2.启用<code>waline</code>配置项</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">waline:</span><br>  <span class="hljs-attr">serverURL:</span> <span class="hljs-string">&#x27;blog-waline-x74w.vercel.app&#x27;</span>  <span class="hljs-comment"># 上面复制过来的服务地址</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">window.location.pathname</span><br>  <span class="hljs-attr">meta:</span> [<span class="hljs-string">&#x27;nick&#x27;</span>, <span class="hljs-string">&#x27;mail&#x27;</span>, <span class="hljs-string">&#x27;link&#x27;</span>]<br>  <span class="hljs-attr">requiredMeta:</span> [<span class="hljs-string">&#x27;nick&#x27;</span>]<br>  <span class="hljs-attr">lang:</span> <span class="hljs-string">&#x27;zh-CN&#x27;</span><br>  <span class="hljs-attr">emoji:</span> [<span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/walinejs/emojis/weibo&#x27;</span>]<br>  <span class="hljs-attr">dark:</span> <span class="hljs-string">&#x27;html[data-user-color-scheme=&quot;dark&quot;]&#x27;</span><br>  <span class="hljs-attr">wordLimit:</span> <span class="hljs-number">0</span><br>  <span class="hljs-attr">pageSize:</span> <span class="hljs-number">10</span><br>  <span class="hljs-attr">locale:</span> <br>    <span class="hljs-attr">placeholder:</span> <span class="hljs-string">&#x27;哈，快找个位置随便坐~&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="国内网络出错"><a href="#国内网络出错" class="headerlink" title="国内网络出错"></a>国内网络出错</h2><p>国内网路环境加载不了评论，也发布不了评论</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630093058555.png" alt="image-20240630093058555"></p><p>此时我们需要绑定国内域名，注意绑定国内域名时请绑定你申请域名的子域名，比如你的域名时airainday.top，应该填写waline.airianday.top,waline可以自定义为你想要的名称。（这样做是因为airainday.top之前已经与airainday.github.io绑定了，这里再填写airainday.top会冲突，因此填了一个子域名）</p><p>然后需要在域名提供商那里添加CNAME解析记录：</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630095432783.png" alt="image-20240630095432783"></p><p>出现下图说明DNS解析正确，接着会生成SSL证书，等待一会。</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630095111432.png" alt="image-20240630095111432"></p><p>等了很久也没有成功，发现是绑定的域名没有备案，换一个备案后的域名即可。</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630145911262.png" alt="image-20240630145911262"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.kevinchu.top/2023/07/17/vercel-deploy-waline/">Vercel部署Waline评论系统 - KEVIN’S BLOG (kevinchu.top)</a></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fluid -1- 个性化页脚</title>
    <link href="/2024/06/29/fluid-1-%E4%B8%AA%E6%80%A7%E5%8C%96%E9%A1%B5%E8%84%9A/"/>
    <url>/2024/06/29/fluid-1-%E4%B8%AA%E6%80%A7%E5%8C%96%E9%A1%B5%E8%84%9A/</url>
    
    <content type="html"><![CDATA[<h2 id="问题补充Leancloud应用绑定域名无法通过SSL"><a href="#问题补充Leancloud应用绑定域名无法通过SSL" class="headerlink" title="问题补充Leancloud应用绑定域名无法通过SSL"></a>问题补充Leancloud应用绑定域名无法通过SSL</h2><p>之前创建的LeanCloud国际版应用由于没有绑定国内域名，国内环境无法访问，导致依赖该应用的功能无法使用，比如网站访客量和访客数，文章浏览数等。</p><p>leancloud应用中绑定域名</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630100116929.png" alt="image-20240630100116929"></p><p>会让你配置DNS，记下CNAME后面的值</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630100327033.png" alt="image-20240630100327033"></p><p>域名提供商里添加解析</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630100257964.png" alt="image-20240630100257964"></p><p>DNS配置没问题后，等待部署证书</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630100853360.png" alt="image-20240630100853360"></p><p>说绑定失败，“查询A和AAA记录时DNSSEC: DNSKEY Missing”。并且VERCEL绑定域名时，验证SSl也失败。<strong>最终发现是绑定的国内域名airianday.top没有备案，最终换了一个备案过的域名rainblog.run，才成功，如下图所示。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240630152520662.png" alt="image-20240630152520662"></p><p>绑定成功后要修改之前的服务地址为该域名，比如下面添加网站访问量和访客数，文章浏览数时要添加：</p><p><code>server_url: https://shuoshuo.rainblog.run</code>,本来用国际版不写也是可以的，但是国际版的国内要用魔法上网才行，因此国际版绑定备案了的域名后，也要补充server_url的值。</p><hr><p>本篇文章主要介绍如何个性化备案、网站运行时长、添加访问量和访客数。以下教程基于Fluid主题，主题安装方式是直接用npm安装，安装方式参考：<a href="https://hexo.fluid-dev.com/docs/start/">开始使用 | Hexo Fluid 用户手册 (fluid-dev.com)</a>。</p><h2 id="运行时长和个性化备案"><a href="#运行时长和个性化备案" class="headerlink" title="运行时长和个性化备案"></a>运行时长和个性化备案</h2><p>效果如下</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240629211459247.png" alt="image-20240629211459247"></p><p>参考链接：<a href="https://htext.top/post/aaca4077.html">我的 Fluid 主题折腾记录 - Huanlan233’s Texts (htext.top)</a></p><p>这里利用Fluid的注入代码的方式来完成上述两个功能，可以先了解一下：<a href="https://hexo.fluid-dev.com/docs/advance/#hexo-%E6%B3%A8%E5%85%A5%E4%BB%A3%E7%A0%81">进阶用法 | Hexo Fluid 用户手册 (fluid-dev.com)</a>，该方法可以在不改变源码文件情况下修改主题功能。</p><h3 id="添加运行时长"><a href="#添加运行时长" class="headerlink" title="添加运行时长"></a>添加运行时长</h3><p>博客项目根目录下新建文件夹scripts，并新建一个footer.js文件，里面填入下面代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">filter</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;theme_inject&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">injects</span>) &#123;<br>  injects.<span class="hljs-property">footer</span>.<span class="hljs-title function_">file</span>(<span class="hljs-string">&#x27;default&#x27;</span>, <span class="hljs-string">&#x27;source/_inject/layout/_partials/footer.ejs&#x27;</span>);<br>&#125;<br>);<br></code></pre></td></tr></table></figure><p>上述代码含义就是将<code>source/_inject/layout/_partials/footer.ejs</code>文件内容完全替换<code>&lt;footer&gt;&lt;/footer&gt;</code>中的内容，我们只要修改<code>source/_inject/layout/_partials/footer.ejs</code>中的内容即可随意定义footer了。</p><p>下载<a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">fluid源码</a>将<code>layout/_partials/footer.ejs</code>复制到博客项目根目录<code>source/_inject/layout/_partials/</code>文件夹下（没有的目录请新建）。直接复制源码文件是为了保留之前的所有功能，然后我们基于此修改就能添加新的功能了。</p><p>在根目录<code>source</code>目录内新建文件<code>js/runtime.js</code>(没有的目录请新建)，复制下面代码到该文件中（代码来自参考链接）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> <span class="hljs-title class_">StartTime</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&#x27;2022/6/5 00:00:00&#x27;</span>); <span class="hljs-comment">// 获取开始时间</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">runtime</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-built_in">setTimeout</span>(<span class="hljs-string">&quot;runtime()&quot;</span>, <span class="hljs-number">1000</span>);<br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">NowTime</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(); <span class="hljs-comment">// 获取现在的时间</span><br><br>    <span class="hljs-title class_">Time</span> = (<span class="hljs-title class_">NowTime</span>.<span class="hljs-title function_">getTime</span>() - <span class="hljs-title class_">StartTime</span>.<span class="hljs-title function_">getTime</span>()) / <span class="hljs-number">1000</span>; <span class="hljs-comment">// 计算已存活时间(s)</span><br><br>    <span class="hljs-title class_">MaximumUnit</span> = <span class="hljs-number">365</span> * <span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>; <span class="hljs-comment">// 最大单位</span><br><br>    <span class="hljs-title class_">Year</span> = <span class="hljs-title class_">Time</span> / <span class="hljs-title class_">MaximumUnit</span>;<br>    <span class="hljs-title class_">YearINT</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Year</span>);<br><br>    <span class="hljs-title class_">Month</span> = (<span class="hljs-title class_">Year</span> - <span class="hljs-title class_">YearINT</span>) * <span class="hljs-number">12</span>;<br>    <span class="hljs-title class_">MonthINT</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Month</span>);<br><br>    <span class="hljs-title class_">Day</span> = (<span class="hljs-title class_">Month</span> - <span class="hljs-title class_">MonthINT</span>) * (<span class="hljs-number">365</span>/<span class="hljs-number">12</span>); <span class="hljs-comment">//平均天数，防止出现过大的偏差</span><br>    <span class="hljs-title class_">DayINT</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Day</span>);<br><br>    <span class="hljs-title class_">Hour</span> = (<span class="hljs-title class_">Day</span> - <span class="hljs-title class_">DayINT</span>) * <span class="hljs-number">24</span>;<br>    <span class="hljs-title class_">HourINT</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Hour</span>);<br><br>    <span class="hljs-title class_">Minute</span> = (<span class="hljs-title class_">Hour</span> - <span class="hljs-title class_">HourINT</span>) * <span class="hljs-number">60</span>;<br>    <span class="hljs-title class_">MinuteINT</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Minute</span>);<br><br>    <span class="hljs-title class_">Second</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((<span class="hljs-title class_">Minute</span> - <span class="hljs-title class_">MinuteINT</span>) * <span class="hljs-number">60</span>);<br><br><br>    runtime_span.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;本站勉强运行了&quot;</span> + <span class="hljs-title class_">YearINT</span> + <span class="hljs-string">&quot;年 &quot;</span> + <span class="hljs-title class_">MonthINT</span> + <span class="hljs-string">&quot;月 &quot;</span> + <span class="hljs-title class_">DayINT</span> + <span class="hljs-string">&quot;天 &quot;</span> + <span class="hljs-title class_">HourINT</span> + <span class="hljs-string">&quot;时 &quot;</span> + <span class="hljs-title class_">MinuteINT</span> + <span class="hljs-string">&quot;分 &quot;</span> + <span class="hljs-title class_">Second</span> + <span class="hljs-string">&quot;秒&quot;</span>;<br>    <span class="hljs-comment">// 将数据替换到Span上</span><br>&#125;;<br><span class="hljs-built_in">setInterval</span>(<span class="hljs-string">&quot;runtime()&quot;</span>, <span class="hljs-number">1000</span>); <span class="hljs-comment">// 重复运行，时刻更新数据</span><br><span class="hljs-title function_">runtime</span>();<br></code></pre></td></tr></table></figure><p>然后在<code>footer.ejs</code>文件内填入以下带+号的代码：</p><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs erb"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer-inner&quot;</span>&gt;</span></span><br><span class="language-xml">  &lt;%</span><span class="language-ruby"> <span class="hljs-keyword">if</span> (theme.footer.content) &#123; </span><span class="language-xml">%&gt;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer-content&quot;</span>&gt;</span></span><br><span class="language-xml">      &lt;%-</span><span class="language-ruby"> theme.footer.content </span><span class="language-xml">%&gt;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">  &lt;%</span><span class="language-ruby"> &#125; </span><span class="language-xml">%&gt;</span><br><span class="language-xml">  &lt;%</span><span class="language-ruby"> <span class="hljs-keyword">if</span> (theme.footer.statistics.enable) &#123; </span><span class="language-xml">%&gt;</span><br><span class="language-xml">    &lt;%-</span><span class="language-ruby"> partial(<span class="hljs-string">&#x27;_partials/footer/statistics.ejs&#x27;</span>) </span><span class="language-xml">%&gt;</span><br><span class="language-xml">  &lt;%</span><span class="language-ruby"> &#125; </span><span class="language-xml">%&gt;</span><br><span class="language-xml"></span><br><span class="language-xml">  +<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;runtime&quot;</span>&gt;</span></span><br><span class="language-xml">  +  <span class="hljs-comment">&lt;!-- 网站已运行时间 --&gt;</span></span><br><span class="language-xml">  +  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;runtime_span&quot;</span>&gt;</span>加载中...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">  +<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">  &lt;%</span><span class="language-ruby"> <span class="hljs-keyword">if</span>(theme.footer.beian.enable) &#123; </span><span class="language-xml">%&gt;</span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 备案信息 ICP for China --&gt;</span></span><br><span class="language-xml">    &lt;%-</span><span class="language-ruby"> partial(<span class="hljs-string">&#x27;_partials/footer/beian.ejs&#x27;</span>) </span><span class="language-xml">%&gt;</span><br><span class="language-xml">  &lt;%</span><span class="language-ruby"> &#125; </span><span class="language-xml">%&gt;</span><br><span class="language-xml">  &lt;%</span><span class="language-ruby"> <span class="hljs-keyword">if</span>(theme.web_analytics.cnzz) &#123; </span><span class="language-xml">%&gt;</span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- cnzz Analytics Icon --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;cnzz_stat_icon_&lt;%=</span></span></span><span class="language-ruby"> theme.web_analytics.cnzz </span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">%&gt;&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: none&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">  &lt;%</span><span class="language-ruby"> &#125; </span><span class="language-xml">%&gt;</span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br></code></pre></td></tr></table></figure><p>最后在主题配置文件中（_config_fluid.yml）引入自定义的<code>runtime.js</code>文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">custom_js</span>: # 找到custom_js，添加以下代码<br>- <span class="hljs-regexp">/js/</span>runtime.<span class="hljs-property">js</span> <br></code></pre></td></tr></table></figure><p>至此已完成。</p><h3 id="添加萌备案"><a href="#添加萌备案" class="headerlink" title="添加萌备案"></a>添加萌备案</h3><p>和添加运行时间原理一样，不过不用引入自定义的js文件，而是用ejs文件。</p><p>新建文件：<code>source\_inject\layout\_partials\footer\moe_beian.ejs</code>，填入以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs ejs">&lt;div class=&quot;moe_beian&quot;&gt;<br>    &lt;span&gt;<br>      &lt;a href=&quot;https://icp.gov.moe/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;<br>        &lt;%- theme.footer.moe_beian.icp_text %&gt;<br>      &lt;/a&gt;<br>    &lt;/span&gt;<br>    &lt;% if(theme.footer.moe_beian.moe_text) &#123; %&gt;<br>      &lt;% if(theme.footer.moe_beian.moe_code) &#123; %&gt;<br>        &lt;span title=&quot;233333&quot;&gt;<br>          &lt;a<br>            href=&quot;https://icp.gov.moe/?keyword=&lt;%= theme.footer.moe_beian.moe_code %&gt;&quot;<br>            rel=&quot;nofollow noopener&quot;<br>            class=&quot;beian-moe&quot;<br>            target=&quot;_blank&quot;<br>          &gt;<br>            &lt;% if(theme.footer.moe_beian.moe_icon) &#123; %&gt;<br>              &lt;span style=&quot;visibility: hidden; width: 0&quot;&gt;|&lt;/span&gt;<br>              &lt;img src=&quot;&lt;%= url_for(theme.footer.moe_beian.moe_icon) %&gt;&quot; alt=&quot;moe-icon&quot;/&gt;<br>            &lt;% &#125; %&gt;<br>            &lt;span&gt;&lt;%- theme.footer.moe_beian.moe_text %&gt;&lt;/span&gt;<br>          &lt;/a&gt;<br>        &lt;/span&gt;<br>      &lt;% &#125; else &#123; %&gt;<br>        &lt;span class=&quot;beian-moe&quot;&gt;<br>          &lt;% if(theme.footer.moe_beian.moe_icon) &#123; %&gt;<br>            &lt;span style=&quot;visibility: hidden; width: 0&quot;&gt;|&lt;/span&gt;<br>            &lt;img src=&quot;&lt;%= url_for(theme.footer.moe_beian.moe_icon) %&gt;&quot; alt=&quot;moe-icon&quot;/&gt;<br>          &lt;% &#125; %&gt;<br>          &lt;span class=&quot;beian-moe&quot;&gt;&lt;%- theme.footer.moe_beian.moe_text %&gt;&lt;/span&gt;<br>        &lt;/span&gt;<br>      &lt;% &#125; %&gt;<br>    &lt;% &#125; %&gt;<br>  &lt;/div&gt;<br></code></pre></td></tr></table></figure><p>在<code>source\_inject\layout\_partials\footer.ejs</code>新增以下带+代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs js">+&lt;% <span class="hljs-keyword">let</span> dir = process.<span class="hljs-title function_">cwd</span>() %&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer-inner&quot;</span>&gt;</span></span><br><span class="language-xml">  &lt;% if (theme.footer.content) &#123; %&gt;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer-content&quot;</span>&gt;</span></span><br><span class="language-xml">      &lt;%- theme.footer.content %&gt;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">  &lt;% &#125; %&gt;</span><br><span class="language-xml">  &lt;% if (theme.footer.statistics.enable) &#123; %&gt;</span><br><span class="language-xml">    &lt;%- partial(&#x27;_partials/footer/statistics.ejs&#x27;) %&gt;</span><br><span class="language-xml">  &lt;% &#125; %&gt;</span><br><span class="language-xml"></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;runtime&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 网站已运行时间 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;runtime_span&quot;</span>&gt;</span>加载中...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">  &lt;% if(theme.footer.beian.enable) &#123; %&gt;</span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 备案信息 ICP for China --&gt;</span></span><br><span class="language-xml">    &lt;%- partial(&#x27;_partials/footer/beian.ejs&#x27;) %&gt;</span><br><span class="language-xml">  &lt;% &#125; %&gt;</span><br><span class="language-xml">  &lt;% if(theme.web_analytics.cnzz) &#123; %&gt;</span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- cnzz Analytics Icon --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;cnzz_stat_icon_&lt;%= theme.web_analytics.cnzz %&gt;&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: none&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">  &lt;% &#125; %&gt;</span><br><span class="language-xml"></span><br><span class="language-xml">  +&lt;% if(theme.footer.moe_beian.enable) &#123; %&gt;</span><br><span class="language-xml">  + <span class="hljs-comment">&lt;!-- 备案信息 ICP for Moe --&gt;</span></span><br><span class="language-xml">  + &lt;%- include(dir + &#x27;/source/_inject/layout/_partials/footer/moe_beian.ejs&#x27;) %&gt;</span><br><span class="language-xml">  +&lt;% &#125; %&gt;</span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>主题配置文件中在footer下添加以下代码，需要自行修改moe的个性化信息</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">footer</span> <span class="hljs-comment"># 找到footer，在下面添加以下代码即可</span><br>    <span class="hljs-comment"># 好玩的备案</span><br>      <span class="hljs-attr">moe_beian:</span><br>        <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">icp_text:</span> <br>        <span class="hljs-attr">moe_text:</span> <span class="hljs-string">萌ICP备20240531号</span><br>        <span class="hljs-attr">moe_code:</span> <span class="hljs-number">20240531</span><br>        <span class="hljs-attr">moe_icon:</span> <span class="hljs-string">/img/moe_beian.png</span><br></code></pre></td></tr></table></figure><p>下载<a href="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/icon120.png">moe图标</a>放在<code>/img/moe_beian.png</code>下。可以用该工具修改图标大小：<a href="https://www.iloveimg.com/zh-cn">iLoveIMG | 图像文件在线编辑工具</a>。</p><h2 id="网站访问量和访客数、文章浏览数"><a href="#网站访问量和访客数、文章浏览数" class="headerlink" title="网站访问量和访客数、文章浏览数"></a>网站访问量和访客数、文章浏览数</h2><p>参考官方教程：<a href="https://hexo.fluid-dev.com/docs/guide/#%E5%B1%95%E7%A4%BA-pv-%E4%B8%8E-uv-%E7%BB%9F%E8%AE%A1">配置指南 | Hexo Fluid 用户手册 (fluid-dev.com)</a></p><p>这里用LeanCloud国际版来实现，需要自己先注册账号。</p><p>Leancloud新建一个应用：<a href="https://console.leancloud.app/apps">LeanCloud</a>。</p><p>在主题配置中找到<code>web_analytics:  # 网页访问统计</code>，修改以下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">web_analytics:</span>  <span class="hljs-comment"># 网页访问统计</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <br>  <span class="hljs-attr">leancloud:</span><br>    <span class="hljs-attr">app_id:</span> <span class="hljs-string">你新建应用的app_id</span><br>    <span class="hljs-attr">app_key:</span> <span class="hljs-string">你新建应用的app_key</span><br>    <span class="hljs-comment"># REST API 服务器地址，国际版不填</span><br>    <span class="hljs-comment"># Only the Chinese mainland users need to set</span><br>    <span class="hljs-attr">server_url:</span><br>    <span class="hljs-comment"># 统计页面时获取路径的属性</span><br>    <span class="hljs-comment"># Get the attribute of the page path during statistics</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">window.location.pathname</span><br>    <span class="hljs-comment"># 开启后不统计本地路径( localhost 与 127.0.0.1 )</span><br>    <span class="hljs-comment"># If true, ignore localhost &amp; 127.0.0.1</span><br>    <span class="hljs-attr">ignore_local:</span> <span class="hljs-literal">true</span> <br></code></pre></td></tr></table></figure><p>找到footer下的statistics配置，修改以下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">statistics:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">source:</span> <span class="hljs-string">&quot;leancloud&quot;</span><br>  <span class="hljs-attr">pv_format:</span> <span class="hljs-string">&quot;总访问量 &#123;&#125; 次&quot;</span><br>  <span class="hljs-attr">uv_format:</span> <span class="hljs-string">&quot;总访客数 &#123;&#125; 人&quot;</span>  <br></code></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240629220535866.png" alt="image-20240629220535866"></p><p>找到post的meta的views，修改以下配置，成功后会在每个文章中展示该文章浏览人数。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">post:</span><br><span class="hljs-attr">meta:</span><br>        <span class="hljs-attr">views:</span><br>          <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-comment"># 统计数据来源</span><br>          <span class="hljs-comment"># Data Source</span><br>          <span class="hljs-comment"># Options: busuanzi | leancloud</span><br>          <span class="hljs-attr">source:</span> <span class="hljs-string">&quot;leancloud&quot;</span><br></code></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/airainday/blogimage@main/image-20240629220643606.png" alt="image-20240629220643606"></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>多模态综述</title>
    <link href="/2024/06/27/%E5%A4%9A%E6%A8%A1%E6%80%81%E7%BB%BC%E8%BF%B0/"/>
    <url>/2024/06/27/%E5%A4%9A%E6%A8%A1%E6%80%81%E7%BB%BC%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<p>本文将集中于语言-视觉多模态方面的综述。</p>]]></content>
    
    
    <categories>
      
      <category>AI</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CLIP</tag>
      
      <tag>Beit3</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
